version: '3'
services:
  postgres-order:
    container_name: postgres-order
    image: postgres:14.9-alpine
    environment:
      POSTGRES_DB: order_service
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-order-data:/var/lib/postgresql/data
    networks:
      - my-network
    restart: always

  postgres-inventory:
    container_name: postgres-inventory
    image: postgres:14.9-alpine
    environment:
      POSTGRES_DB: inventory_service
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres-inventory-data:/var/lib/postgresql/data
    networks:
      - my-network
    restart: always

  postgres-product:
    image: postgres:14.9-alpine
    container_name: postgres-product
    environment:
      POSTGRES_DB: product_service
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-product-data:/var/lib/postgresql/data
    networks:
      - my-network
    restart: always

  postgres-notification:
    image: postgres:14.9-alpine
    container_name: postgres-notification
    environment:
      POSTGRES_DB: notification_service
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: postgres
    ports:
      - "5435:5432"
    volumes:
      - postgres-notification-data:/var/lib/postgresql/data
    networks:
      - my-network
    restart: always

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: keycloak
    command: [ "start-dev", "--import-realm" ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"

networks:
  my-network:

volumes:
  postgres-product-data:
  postgres-order-data:
  postgres-inventory-data:
  postgres-notification-data: